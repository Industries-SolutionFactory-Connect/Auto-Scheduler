minimum_cumulusci_version: '3.74.0'
project:
    name: Auto-Scheduler
    package:
        name: Auto-Scheduler
        api_version: '58.0'
    git:
        default_branch: 'main'
        prefix_feature: 'feature/'
        prefix_beta: 'beta/'
        prefix_release: 'release/'
        repo_url: https://github.com/Industries-SolutionFactory-Connect/Auto-Scheduler
    source_format: sfdx

tasks:
    robot:
        options:
            suites: robot/Auto-Scheduler/tests
            options:
                outputdir: robot/Auto-Scheduler/results

    robot_testdoc:
        options:
            path: robot/Auto-Scheduler/tests
            output: robot/Auto-Scheduler/doc/Auto-Scheduler_tests.html

    run_tests:
        options:
            required_org_code_coverage_percent: 75


flows:
    dependencies:
        steps:
            2: 
                task: org_settings
                options:
                    definition_file: orgs/dev.json
                ui_options:
                    name: Enabling Org Settings

            3: 
                task: deploy
                options:
                    path: force-custom/permissionsets
                ui_options:
                    name: Deploy permissionsets       

            4:
                task: assign_permission_sets
                options:
                    api_names: ActionPlans, AutomotiveFoundationUserPsl, AutomotiveSchedulerPsl, LifeEventsAccessPSL, ClaimsManagementFoundationPsl, CriteriaBasedSearchAndFilterPsl, AnalyticsStoreUser, IndustriesVisit, IndustriesServiceExcellence, OmniStudioAdmin, OmniStudioUser, ManufacturingPartnerLeadMgmtPsl, ManufacturingPartnerPerformanceMgmtPsl, ManufacturingPartnerVisitMgmtPsl, RebateManagementAdminPsl, RebateManagementUserPsl, Salesforce_Scheduler_for_Automotive, WarrantyLifecycleMgmtPsl
                    user_alias: UUser, AUser
                ui_options:
                    name: Adding Permission Set to Admin User

    update_custom_metadata:
        steps:
            1:
                task: deploy
                options:
                    path: force-custom/experiences
                ui_options:
                    name: Deploy the metadata for experience bundle
               
            2:
                task: deploy
                options:
                    path: force-custom/connectedApps
                    transforms:
                        - transform: find_replace
                          options:
                            patterns:
                                - find: replaceMyURL
                                  inject_org_url: True
                                - find: replaceMyEmail
                                  inject_username: True
           3:
                task: publish_community
                options:
                    name: ScheduerExp
                ui_options:
                    name: Publish Guest Community   

            4:
                task: deploy
                options:
                    path: force-custom/authproviders
                    transforms:
                        - transform: find_replace
                          options:
                            patterns:
                                - find: replaceMyURL
                                  inject_org_url: True

            5:
                task: deploy
                options:
                    path: force-custom/namedCredentials
                    transforms:
                        - transform: find_replace
                          options:
                            patterns:
                                - find: replaceMyURL
                                  inject_org_url: True    

    update_data_post_load:
        steps:
            1:
                task: update_data
                options:
                    object: User
                    where: Profile.Name = 'System Administrator'
                    recipe: Snowfakery/updateUserRole.recipe.yml 

            # Update Account: Enable few accounts as Partner
            2:
                task: update_data
                options:
                    object: Account
                    where: Name = 'Minor Household' Or Name = 'Dream Motors Auto California' Or Name = 'Eniac Auto Dealer' Or Name = 'Geoff Minor'
                    recipe: Snowfakery/updateAccountPartner.recipe.yml

            3:
                task: query
                options:
                    object: Product2
                    query: select Id, Name from Product2 where Name='Neo Ionic EV CD4 2022 VXi' Or Name='Neo CRV 2022 ZXi' Or Name='Neo_Ionic_EV_CD4_VXi_2018' Or Name='Neo Jazz 2022 VXi'
                    result_file: Snowfakery/data/Products.csv

            4:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/createPricebookEntry.recipe.yml
            
            5:
                task: query
                options:
                    object: PricebookEntry
                    query: select Id, Name, Pricebook2Id, Product2Id, UnitPrice from PricebookEntry where Pricebook2.Name like 'Digi%'
                    result_file: Snowfakery/data/PricebookEntry.csv

            6:
                task: query
                options:
                    object: Order
                    query: select Id from Order
                    result_file: Snowfakery/data/Orders.csv

            7:
                task: update_data
                options:
                    object: Order
                    recipe: Snowfakery/updateOrders.recipe.yml

            18:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/createOrderItem.recipe.yml

            # Order: Set status as Activated for few orders
            9:
                task: update_data
                options:
                    object: Order
                    where: Account.Name = 'Geoff Minor' Or Account.Name = 'Minor Household' Or Account.name= 'Xenith Autodealer Dallas'
                    recipe: Snowfakery/updateOrderStatus.recipe.yml


            # Create Action Plan (ActionPlanTemplate, ActionPlanTemplateItem, ActionPlanTemplateItemValue, ActionPlan)
            10:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/ActionPlan/createActionPlanTemplate.recipe.yml

            11:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/ActionPlan/createActionPlanTemplateItem.recipe.yml


            12:
                task: query
                options:
                    object: ActionPlanTemplateItem
                    query: select Id, Name from ActionPlanTemplateItem where Name like 'Overall%'
                    result_file: Snowfakery/ActionPlan/data/ActionPlanTemplateItemOverall.csv

            13:
                task: query
                options:
                    object: ActionPlanTemplateItem
                    query: select Id, Name from ActionPlanTemplateItem where Name like 'Engine%'
                    result_file: Snowfakery/ActionPlan/data/ActionPlanTemplateItemEngine.csv

            14:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/ActionPlan/createAPTempItemValue.recipe.yml

            15:
                task: update_data
                options:
                    object: ActionPlanTemplateVersion
                    where: Name = 'Inspection'
                    recipe: Snowfakery/ActionPlan/updateActionPlanTempStatus.recipe.yml


            16:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/ActionPlan/createActionPlan.recipe.yml
    dev_org:
        steps:
            3.1: 
                flow: update_custom_metadata
            3.2: 
                flow: update_data_post_load


    auto-sch-setup:
        steps:
            1: 
                task: org_settings
                options:
                    definition_file: orgs/dev.json
                ui_options:
                    name: Enabling Org Settings

            2: 
                task: deploy
                options:
                    path: force-custom/permissionsets
                ui_options:
                    name: Deploy permissionsets       

            3:
                task: assign_permission_sets
                options:
                    api_names: ActionPlans, AutomotiveFoundationUserPsl, AutomotiveSchedulerPsl, LifeEventsAccessPSL, ClaimsManagementFoundationPsl, CriteriaBasedSearchAndFilterPsl, AnalyticsStoreUser, IndustriesVisit, IndustriesServiceExcellence, OmniStudioAdmin, OmniStudioUser, ManufacturingPartnerLeadMgmtPsl, ManufacturingPartnerPerformanceMgmtPsl, ManufacturingPartnerVisitMgmtPsl, RebateManagementAdminPsl, RebateManagementUserPsl, Salesforce_Scheduler_for_Automotive, WarrantyLifecycleMgmtPsl
                    user_alias: UUser, AUser
                ui_options:
                    name: Adding Permission Set to Admin User
        
            4:
                task: deploy
                options:
                    path: force-app/main/default/
                ui_options:
                    name: Deploy the metadata            

            5:
                task: update_data
                options:
                    object: User
                    where: Profile.Name = 'System Administrator'
                    recipe: Snowfakery/updateUserRole.recipe.yml 

            6:
                task: deploy
                options:
                    path: force-custom/experiences
                ui_options:
                    name: Deploy the metadata for experience bundle

            7:
                task: publish_community
                options:
                    name: ScheduerExp
                ui_options:
                    name: Publish Guest Community 

            8:
                task: deploy
                options:
                    path: force-custom/connectedApps
                    transforms:
                        - transform: find_replace
                          options:
                            patterns:
                                - find: replaceMyURL
                                  inject_org_url: True
                                - find: replaceMyEmail
                                  inject_username: True

            9:
                task: deploy
                options:
                    path: force-custom/authproviders
                    transforms:
                        - transform: find_replace
                          options:
                            patterns:
                                - find: replaceMyURL
                                  inject_org_url: True

            10:
                task: deploy
                options:
                    path: force-custom/namedCredentials
                    transforms:
                        - transform: find_replace
                          options:
                            patterns:
                                - find: replaceMyURL
                                  inject_org_url: True
                                  
            11:
                task: load_dataset
                options:
                    mapping: datasets/default/default.mapping.yml
                    sql_path: datasets/default/default.dataset.sql
                ui_options:
                    name: Load Data records

            # Update Account: Enable few accounts as Partner
            12:
                task: update_data
                options:
                    object: Account
                    where: Name = 'Minor Household' Or Name = 'Dream Motors Auto California' Or Name = 'Eniac Auto Dealer' Or Name = 'Geoff Minor'
                    recipe: Snowfakery/updateAccountPartner.recipe.yml

            13:
                task: query
                options:
                    object: Product2
                    query: select Id, Name from Product2 where Name='Neo Ionic EV CD4 2022 VXi' Or Name='Neo CRV 2022 ZXi' Or Name='Neo_Ionic_EV_CD4_VXi_2018' Or Name='Neo Jazz 2022 VXi'
                    result_file: Snowfakery/data/Products.csv

            14:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/createPricebookEntry.recipe.yml
            
            15:
                task: query
                options:
                    object: PricebookEntry
                    query: select Id, Name, Pricebook2Id, Product2Id, UnitPrice from PricebookEntry where Pricebook2.Name like 'Digi%'
                    result_file: Snowfakery/data/PricebookEntry.csv

            16:
                task: query
                options:
                    object: Order
                    query: select Id from Order
                    result_file: Snowfakery/data/Orders.csv

            17:
                task: update_data
                options:
                    object: Order
                    recipe: Snowfakery/updateOrders.recipe.yml

            18:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/createOrderItem.recipe.yml

            # Order: Set status as Activated for few orders
            19:
                task: update_data
                options:
                    object: Order
                    where: Account.Name = 'Geoff Minor' Or Account.Name = 'Minor Household' Or Account.name= 'Xenith Autodealer Dallas'
                    recipe: Snowfakery/updateOrderStatus.recipe.yml


            # Create Action Plan (ActionPlanTemplate, ActionPlanTemplateItem, ActionPlanTemplateItemValue, ActionPlan)
            20:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/ActionPlan/createActionPlanTemplate.recipe.yml

            21:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/ActionPlan/createActionPlanTemplateItem.recipe.yml


            22:
                task: query
                options:
                    object: ActionPlanTemplateItem
                    query: select Id, Name from ActionPlanTemplateItem where Name like 'Overall%'
                    result_file: Snowfakery/ActionPlan/data/ActionPlanTemplateItemOverall.csv

            23:
                task: query
                options:
                    object: ActionPlanTemplateItem
                    query: select Id, Name from ActionPlanTemplateItem where Name like 'Engine%'
                    result_file: Snowfakery/ActionPlan/data/ActionPlanTemplateItemEngine.csv

            24:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/ActionPlan/createAPTempItemValue.recipe.yml

            25:
                task: update_data
                options:
                    object: ActionPlanTemplateVersion
                    where: Name = 'Inspection'
                    recipe: Snowfakery/ActionPlan/updateActionPlanTempStatus.recipe.yml

            26:
                task: generate_and_load_from_yaml
                options:
                    generator_yaml: Snowfakery/ActionPlan/createActionPlan.recipe.yml


    test-flow:
        steps:
            # 1:
            #     task: generate_and_load_from_yaml
            #     options:
            #         generator_yaml: Snowfakery/InterestTag/createInterestTag.recipe.yml
            
            # 2:
            #     task: deploy
            #     options:
            #         path: force-app/main/default/skills
            #     ui_options:
            #         name: Deploy the skills metadata   


            # 6:
            #     task: load_dataset
            #     options:
            #         mapping: datasets/custom/default.mapping.yml
            #         sql_path: datasets/custom/default.dataset.sql
            #     ui_options:
            #         name: Load Data records

            # 8:
            #     task: deploy
            #     options:
            #         path: force-custom/connectedApps
            #         transforms:
            #             - transform: find_replace
            #               options:
            #                 patterns:
            #                     - find: replaceMyURL
            #                       inject_org_url: True
            #                     - find: replaceMyEmail
            #                       inject_username: True

            # 9:
            #     task: deploy
            #     options:
            #         path: force-custom/authproviders
            #         transforms:
            #             - transform: find_replace
            #               options:
            #                 patterns:
            #                     - find: replaceMyURL
            #                       inject_org_url: True

            # 10:
            #     task: deploy
            #     options:
            #         path: force-custom/namedCredentials
            #         transforms:
            #             - transform: find_replace
            #               options:
            #                 patterns:
            #                     - find: replaceMyURL
            #                       inject_org_url: True



            # 12:
            #     task: query
            #     options:
            #         object: Product2
            #         query: select Id, Name from Product2 where Name='Neo Ionic EV CD4 2022 VXi' Or Name='Neo CRV 2022 ZXi' Or Name='Neo_Ionic_EV_CD4_VXi_2018' Or Name='Neo Jazz 2022 VXi'
            #         result_file: Snowfakery/data/Products.csv

            # 13:
            #     task: generate_and_load_from_yaml
            #     options:
            #         generator_yaml: Snowfakery/createPricebookEntry.recipe.yml
            
            # 14:
            #     task: query
            #     options:
            #         object: PricebookEntry
            #         query: select Id, Name, Pricebook2Id, Product2Id, UnitPrice from PricebookEntry where Pricebook2.Name like 'Digi%'
            #         result_file: Snowfakery/data/PricebookEntry.csv

            # 15:
            #     task: query
            #     options:
            #         object: Order
            #         query: select Id from Order
            #         result_file: Snowfakery/data/Orders.csv

            # 16:
            #     task: update_data
            #     options:
            #         object: Order
            #         recipe: Snowfakery/updateOrders.recipe.yml

            # 17:
            #     task: generate_and_load_from_yaml
            #     options:
            #         generator_yaml: Snowfakery/createOrderItem.recipe.yml

            # # Order: Set status as Activated for few orders
            # 18:
            #     task: update_data
            #     options:
            #         object: Order
            #         where: Account.Name = 'Geoff Minor' Or Account.Name = 'Minor Household' Or Account.name= 'Xenith Autodealer Dallas'
            #         recipe: Snowfakery/updateOrderStatus.recipe.yml


            # # Create Action Plan (ActionPlanTemplate, ActionPlanTemplateItem, ActionPlanTemplateItemValue, ActionPlan)
            # 19:
            #     task: generate_and_load_from_yaml
            #     options:
            #         generator_yaml: Snowfakery/ActionPlan/createActionPlanTemplate.recipe.yml

            # 19:
            #     task: query
            #     options:
            #         object: ActionPlanTemplateVersion
            #         query: select Id from ActionPlanTemplateVersion where Name = 'Inspection'
            #         result_file: Snowfakery/ActionPlan/data/ActionPlanTemplateVersion.csv

            # 20:
            #     task: generate_and_load_from_yaml
            #     options:
            #         generator_yaml: Snowfakery/ActionPlan/createActionPlanTemplateItem.recipe.yml


            # 21:
            #     task: query
            #     options:
            #         object: ActionPlanTemplateItem
            #         query: select Id, Name from ActionPlanTemplateItem where Name like 'Overall%'
            #         result_file: Snowfakery/ActionPlan/data/ActionPlanTemplateItemOverall.csv

            # 22:
            #     task: query
            #     options:
            #         object: ActionPlanTemplateItem
            #         query: select Id, Name from ActionPlanTemplateItem where Name like 'Engine%'
            #         result_file: Snowfakery/ActionPlan/data/ActionPlanTemplateItemEngine.csv

            # 23:
            #     task: generate_and_load_from_yaml
            #     options:
            #         generator_yaml: Snowfakery/ActionPlan/createAPTempItemValue.recipe.yml

            # 24:
            #     task: update_data
            #     options:
            #         object: ActionPlanTemplateVersion
            #         where: Name = 'Inspection'
            #         recipe: Snowfakery/ActionPlan/updateActionPlanTempStatus.recipe.yml

            # # 25:
            # #     task: query
            # #     options:
            # #         object: Vehicle
            # #         query: select Id from Vehicle where Name = 'Neo City 2022 ZXi Grey'
            # #         result_file: Snowfakery/ActionPlan/data/Vehicle.csv

            # 26:
            #     task: generate_and_load_from_yaml
            #     options:
            #         generator_yaml: Snowfakery/ActionPlan/createActionPlan.recipe.yml

            # # 27:
            # #     task: query
            # #     options:
            # #         object: UserRole
            # #         query: select Id from UserRole where Name = 'OEM'
            # #         result_file: Snowfakery/data/Role.csv

            28:
                task: update_data
                options:
                    object: User
                    where: Profile.Name = 'System Administrator'
                    recipe: Snowfakery/updateUserRole.recipe.yml             

plans:
    install:
        slug: install
        title: Automotive Scheduler
        tier: primary
        is_listed: True
        preflight_message: "This will install Automotive Scheduler Module"
        post_install_message: "Thanks for installing Automotive Scheduler Module. "
        error_message: "To get help with this error, go to [help.salesforce.com](https://help.salesforce.com/), find the Support & Services area and log a technical support ticket with Salesforce. Include “PMM” in the subject line and include in your comment the installation link shown here."
        checks:
            - when: "'AutomotiveSchedulerPsl' not in tasks.get_available_permission_set_licenses()"
              action: error
              message: "You need AutomotiveSchedulerPsl licence to use this feature. Contact your Administrator."
            - when: "'AutomotiveSchedulerInExprcCloudPsl' not in tasks.get_available_permission_set_licenses()"
              action: error
              message: "You need AutomotiveSchedulerInExprcCloudPsl licence to use this feature. Contact your Administrator."
        steps:
            1:
                flow: auto-sch-setup
